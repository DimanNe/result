name: Continuous Integration

on:
  push:
    branches:
      - master

  pull_request:
    branches:
      - master

jobs:
  examples:
    strategy:
      matrix:
        conf:
          - os: windows-latest
            cc: cl
            cxx: cl

          - os: macos-latest
            cc: clang
            cxx: clang++

          - os: ubuntu-20.04
            cc: clang-10
            cxx: clang++-10

    runs-on: ${{ matrix.conf.os }}

    env:
      CC: ${{ matrix.conf.cc }}
      CXX: ${{ matrix.conf.cxx }}

    steps:
      - uses: actions/checkout@v2

      - uses: friendlyanon/fetch-core-count@v1
        id: cores

      - name: Switch to Clang 10 (macOS)
        if: startsWith(matrix.conf.os, 'macos')
        run: sudo xcode-select -s /Applications/Xcode_10.3.app

      - name: Build examples
        run: cmake -P cmake/ciBuild.cmake -- examples build/examples
          ${{ steps.cores.outputs.plus_one }}

  tests:
    strategy:
      matrix:
        conf:
          - os: windows-latest
            cc: cl
            cxx: cl

          - os: macos-latest
            cc: clang
            cxx: clang++

          - os: ubuntu-20.04
            cc: clang-10
            cxx: clang++-10

    runs-on: ${{ matrix.conf.os }}

    env:
      CC: ${{ matrix.conf.cc }}
      CXX: ${{ matrix.conf.cxx }}

    steps:
      - uses: actions/checkout@v2

      - uses: friendlyanon/fetch-core-count@v1
        id: cores

      - name: Switch to Clang 10 (macOS)
        if: startsWith(matrix.conf.os, 'macos')
        run: sudo xcode-select -s /Applications/Xcode_10.3.app

      - name: Build library
        run: cmake -P cmake/ciBuild.cmake -- . build/install
          ${{ steps.cores.outputs.plus_one }}

      - name: Install library
        run: cmake --install build/install --config Release

      - name: Build tests
        run: cmake -P cmake/ciBuild.cmake -- test build/test
          ${{ steps.cores.outputs.plus_one }}
          -D TEST_INSTALLED_VERSION:BOOL=YES

      - name: Run tests
        working-directory: build/test
        run: ctest -C Release --output-on-failure -j
          ${{ steps.cores.outputs.plus_one }}
